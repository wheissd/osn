# Multi-stage build for C++ Social Network application

# Build stage
FROM ubuntu:22.04 AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    python3 \
    python3-pip \
    pkg-config \
    libssl-dev \
    libpq-dev \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Conan
RUN pip3 install conan==1.59.0

# Set up Conan profile
RUN conan profile new default --detect
RUN conan profile update settings.compiler.libcxx=libstdc++11 default

# Create working directory
WORKDIR /app

# Copy dependency files
COPY conanfile.txt .
COPY CMakeLists.txt .

# Install dependencies with Conan
RUN mkdir build && cd build && \
    conan install .. --build=missing -s build_type=Release && \
    cd ..

# Copy source code
COPY src/ src/
COPY include/ include/
COPY migrations/ migrations/

# Build the application
RUN cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc)

# Runtime stage
FROM ubuntu:22.04 AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    libpq5 \
    libstdc++6 \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN useradd -r -s /bin/false appuser

# Create working directory
WORKDIR /app

# Copy built application
COPY --from=builder /app/build/bin/social_network .

# Copy migrations
COPY --from=builder /app/migrations/ migrations/

# Copy runtime libraries from builder stage if needed
COPY --from=builder /app/build/lib/ lib/

# Set environment variables
ENV LD_LIBRARY_PATH=/app/lib:$LD_LIBRARY_PATH

# Change ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["./social_network"]
